// Mocks generated by Mockito 5.0.10 from annotations
// in rest/test/fest_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:fest/options.dart' as _i4;
import 'package:fest/snapshot.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [Snapshot].
///
/// See the documentation for Mockito's code generation for more information.
class MockSnapshot extends _i1.Mock implements _i2.Snapshot {
  MockSnapshot() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: '') as String);
  @override
  _i2.SnapshotType get type => (super.noSuchMethod(Invocation.getter(#type),
      returnValue: _i2.SnapshotType.image) as _i2.SnapshotType);
  @override
  set type(_i2.SnapshotType? _type) =>
      super.noSuchMethod(Invocation.setter(#type, _type),
          returnValueForMissingStub: null);
  @override
  _i3.Future<bool> matchesSnapshot(_i2.Snapshot? newSnapshot) =>
      (super.noSuchMethod(Invocation.method(#matchesSnapshot, [newSnapshot]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> save(_i4.SnapshotTestOptions? opts, {bool? asNew}) =>
      (super.noSuchMethod(Invocation.method(#save, [opts], {#asNew: asNew}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> saveImage(_i4.SnapshotTestOptions? opts, List<int>? img,
          {bool? asNew}) =>
      (super.noSuchMethod(
          Invocation.method(#saveImage, [opts, img], {#asNew: asNew}),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
